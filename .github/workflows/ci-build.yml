#---------------------------------------------------------------------------
# This workflow will build and archive a wxPython source distribution for
# CI. It will start by building a sdist archive first, and then that will be
# used in subsequent jobs on each supported platform and Python version.
#---------------------------------------------------------------------------

name: wxPython CI build source

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  build-source-dist:
    runs-on: ubuntu-latest

    outputs:
      VERSION:

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade -r requirements.txt

      - name: Generate code and create sdist
        id: generate
        run: |
          python build.py setrev etg sip --nodoc sdist
          VERSION=$(python build.py --quiet version)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Save sdist as workflow artifact
        uses: actions/upload-artifact@v3
        with:
          name: wxPython-ci-sdist-${{ steps.generate.outputs.VERSION }}
          path: dist/wxPython-${{ steps.generate.outputs.VERSION }}.tar.gz


#---------------------------------------------------------------------------

  build-wheels:
    name: wheels
    needs: build-source-dist
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        architechture: ['x86', 'x64']
        # Exclude x86 configs on non-Windows OSs
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86

        # # Add matrix slots for 32-bit Pythons on Windows
        # include:
        #   - os: 'windows-latest'
        #     python-version: '3.7'
        #     architecture: 'x86'
        #   - os: 'windows-latest'
        #     python-version: '3.8'
        #     architecture: 'x86'
        #   - os: 'windows-latest'
        #     python-version: '3.9'
        #     architecture: 'x86'
        #   - os: 'windows-latest'
        #     python-version: '3.10'
        #     architecture: 'x86'
        #   - os: 'windows-latest'
        #     python-version: '3.11'
        #     architecture: 'x86'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: download CI sdist archive
        uses: actions/download-artifact@v3
        with:
          name: wxPython-ci-sdist-${{ needs.build-source-dist.VERSION }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'
          architecture: '${{ matrix.architecture }}'
          cache: 'pip'

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade -r requirements.txt

          # TODO: Install needed apt packages if we're on Linux
          if [ ${{ matrix.os }} == ubuntu-latest ]; then
              apt-get install -y \
                  freeglut3 \
                  freeglut3-dev \
                  libgl1-mesa-dev \
                  libglu1-mesa-dev \
                  libgstreamer-plugins-base1.0-dev \
                  libgtk-3-dev \
                  libjpeg-dev \
                  libnotify-dev \
                  libsdl2-dev \
                  libsm-dev \
                  libtiff-dev \
                  libwebkit2gtk-4.0-dev \
                  libxtst-dev;
          fi

      - name: Build wheel
        shell: bash
        run: |
            mkdir dist
            mv wxPython-*.tar.gz dist
            cd dist
            pip wheel -v wxPython-*.tar.gz

        # Archive wheel file
